{
  "api/OmiyaGames.Global.Settings.BaseSettingsData.html": {
    "href": "api/OmiyaGames.Global.Settings.BaseSettingsData.html",
    "title": "Class BaseSettingsData | Global Settings documentation",
    "keywords": "Class BaseSettingsData The data stored as addressables that the editor and runtime references Inheritance Object BaseSettingsData Implements ISerializationCallbackReceiver Namespace : OmiyaGames.Global.Settings Assembly : cs.temp.dll.dll Syntax public abstract class BaseSettingsData : ScriptableObject Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Date: 2/5/2022 Author: Taro Omiya Initial version. Properties CurrentVersion The current version of this setting. Declaration public abstract int CurrentVersion { get; } Property Value Type Description Int32 Remarks Always, ALWAYS update this whenever an upgrade from an old version of the base settings needs to be updated. Methods OnAfterDeserialize() Declaration public virtual void OnAfterDeserialize() OnBeforeSerialize() Declaration public virtual void OnBeforeSerialize() OnUpgrade(Int32, out String) This event is called when the serialized object is older than CurrentVersion . Declaration protected virtual bool OnUpgrade(int oldVersion, out string errorMessage) Parameters Type Name Description Int32 oldVersion The last serialization version number. String errorMessage Error message to print on failure. Returns Type Description Boolean True if successful; false, otherwise. Implements ISerializationCallbackReceiver"
  },
  "api/OmiyaGames.Global.Settings.BaseSettingsManager-2.html": {
    "href": "api/OmiyaGames.Global.Settings.BaseSettingsManager-2.html",
    "title": "Class BaseSettingsManager<TManager, TData> | Global Settings documentation",
    "keywords": "Class BaseSettingsManager<TManager, TData> Abstract class that manages game interaction with TData . Inheritance Object BaseSettingsManager<TManager, TData> Namespace : OmiyaGames.Global.Settings Assembly : cs.temp.dll.dll Syntax public abstract class BaseSettingsManager<TManager, TData> : MonoBehaviour where TManager : BaseSettingsManager<TManager, TData> where TData : BaseSettingsData Type Parameters Name Description TManager The concrete type extending this class. TData The type of stored project settings to read from. Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.0.0-pre.1 Date: 2/6/2022 Author: Taro Omiya Initial verison. Properties AddressableName Gets the name of the manager setting's addessable. Declaration protected abstract string AddressableName { get; } Property Value Type Description String Methods GetData() Grabs the project settings data. Declaration protected static TData GetData() Returns Type Description TData See Also GetInstance() GetDataStatus() Current status of whether data for this manager has been loaded or not Declaration public static DataHelper.Status GetDataStatus() Returns Type Description DataHelper.Status GetInstance() Grabs the static instance of this manager. Declaration protected static TManager GetInstance() Returns Type Description TManager See Also Data OnDestroy() Event called on disposing this manager. Declaration protected virtual void OnDestroy() OnSetup() Event called on creation of this manager (before Awake() and Start() are called.) Declaration protected virtual IEnumerator OnSetup() Returns Type Description IEnumerator WaitUntilReady() Created a coroutine that waits until this manager finished loading its data. Declaration public static IEnumerator WaitUntilReady() Returns Type Description IEnumerator"
  },
  "api/OmiyaGames.Global.Settings.Data.html": {
    "href": "api/OmiyaGames.Global.Settings.Data.html",
    "title": "Class Data | Global Settings documentation",
    "keywords": "Class Data Helper set of info. Inheritance Object Data Namespace : OmiyaGames.Global.Settings Assembly : cs.temp.dll.dll Syntax public static class Data Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 1.0.0-pre.1 Date: 2/6/2022 Author: Taro Omiya Initial verison."
  },
  "api/OmiyaGames.Global.Settings.Data.Status.html": {
    "href": "api/OmiyaGames.Global.Settings.Data.Status.html",
    "title": "Enum Data.Status | Global Settings documentation",
    "keywords": "Enum Data.Status Indicates the status of whether this manager grabbed an instance of TData . Namespace : OmiyaGames.Global.Settings Assembly : cs.temp.dll.dll Syntax public enum Status Fields Name Description NowLoading Working on loading the project settings. RetrievedProjectData Successfully loaded the project settings. UsingDefaultData Failed to load the project settings, using default settings instead."
  },
  "api/OmiyaGames.Global.Settings.Editor.BaseSettingsBuilder-1.html": {
    "href": "api/OmiyaGames.Global.Settings.Editor.BaseSettingsBuilder-1.html",
    "title": "Class BaseSettingsBuilder<TData> | Global Settings documentation",
    "keywords": "Class BaseSettingsBuilder<TData> Copied and pasted from LocalizationBuildPlayer.cs in com.unity.localization package. Inheritance Object BaseSettingsBuilder<TData> Implements IPostprocessBuildWithReport Namespace : OmiyaGames.Global.Settings.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BaseSettingsBuilder<TData> : IPreprocessBuildWithReport where TData : BaseSettingsData Type Parameters Name Description TData Properties callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description Int32 ConfigName The name the settings asset will be in project via Declaration public abstract string ConfigName { get; } Property Value Type Description String Remarks Should follow the format: company.package.name Methods OnPostprocessBuild(BuildReport) Declaration public void OnPostprocessBuild(BuildReport report) Parameters Type Name Description BuildReport report OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description BuildReport report Implements IPostprocessBuildWithReport"
  },
  "api/OmiyaGames.Global.Settings.Editor.BaseSettingsEditor-1.html": {
    "href": "api/OmiyaGames.Global.Settings.Editor.BaseSettingsEditor-1.html",
    "title": "Class BaseSettingsEditor<TData> | Global Settings documentation",
    "keywords": "Class BaseSettingsEditor<TData> Template editor script for any BaseSettingsData . Inheritance Object BaseSettingsEditor<TData> Namespace : OmiyaGames.Global.Settings.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BaseSettingsEditor<TData> : SettingsProvider where TData : BaseSettingsData Type Parameters Name Description TData Data to render to the Project Settings window. Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Date: 2/7/2022 Author: Taro Omiya Initial version. Constructors BaseSettingsEditor(String, IEnumerable<String>) Constructs a project-scoped . Declaration protected BaseSettingsEditor(string sidebarDisplayName, IEnumerable<string> keywords = null) Parameters Type Name Description String sidebarDisplayName Name displayed on the left sidebar in Project Settings window. IEnumerable < String > keywords Fields FILE_EXTENSION Declaration public const string FILE_EXTENSION = \"asset\" Field Value Type Description String Properties ActiveSettings Gets or sets TData stored in. . Declaration public TData ActiveSettings { get; } Property Value Type Description TData AddressableGroupName The name of the group the addressable will be placed under. Declaration public abstract string AddressableGroupName { get; } Property Value Type Description String AddressableName Declaration public abstract string AddressableName { get; } Property Value Type Description String BodyContent The settings content tree. Declaration protected VisualElement BodyContent { get; } Property Value Type Description VisualElement ConfigName The name the settings asset will be in project via Declaration public abstract string ConfigName { get; } Property Value Type Description String Remarks Should follow the format: company.package.name CreateNewSettingsDialogTitle The title of the dialog that appears in the pop-up after clicking \"Create...' Declaration public virtual string CreateNewSettingsDialogTitle { get; } Property Value Type Description String DefaultSettingsFileName The default settings file name, without the file extension. Declaration public abstract string DefaultSettingsFileName { get; } Property Value Type Description String HeaderText The text to replace the header. Declaration public abstract string HeaderText { get; } Property Value Type Description String HelpUrl The url to help assist users. Declaration public abstract string HelpUrl { get; } Property Value Type Description String NoSettingsMsg The message to display if there are no settings file available. Declaration public virtual string NoSettingsMsg { get; } Property Value Type Description String SaveSettingsMsg The message to display in the save settings dialog. Declaration public virtual string SaveSettingsMsg { get; } Property Value Type Description String UxmlPath The path to the UXML file, used to edit TData Declaration public abstract string UxmlPath { get; } Property Value Type Description String Methods CreateNewSettings(ClickEvent) Creates a new instance of TData . Called when the \"Create...\" button is clicked. Declaration public virtual void CreateNewSettings(ClickEvent _ = null) Parameters Type Name Description ClickEvent _ GetEditSettingsTree() Creates a tree to edit the settings asset. Declaration protected virtual VisualElement GetEditSettingsTree() Returns Type Description VisualElement OnActivate(String, VisualElement) Declaration public override void OnActivate(string searchContext, VisualElement rootElement) Parameters Type Name Description String searchContext VisualElement rootElement"
  },
  "api/OmiyaGames.Global.Settings.Editor.html": {
    "href": "api/OmiyaGames.Global.Settings.Editor.html",
    "title": "Namespace OmiyaGames.Global.Settings.Editor | Global Settings documentation",
    "keywords": "Namespace OmiyaGames.Global.Settings.Editor Classes BaseSettingsBuilder<TData> Copied and pasted from LocalizationBuildPlayer.cs in com.unity.localization package. BaseSettingsEditor<TData> Template editor script for any BaseSettingsData . SettingsEditorHelpers Helper methods for BaseSettingsEditor<TData> ."
  },
  "api/OmiyaGames.Global.Settings.Editor.SettingsEditorHelpers.html": {
    "href": "api/OmiyaGames.Global.Settings.Editor.SettingsEditorHelpers.html",
    "title": "Class SettingsEditorHelpers | Global Settings documentation",
    "keywords": "Class SettingsEditorHelpers Helper methods for BaseSettingsEditor<TData> . Inheritance Object SettingsEditorHelpers Namespace : OmiyaGames.Global.Settings.Editor Assembly : cs.temp.dll.dll Syntax public static class SettingsEditorHelpers Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Date: 2/8/2022 Author: Taro Omiya Initial version. Fields OMIYA_GAMES_GROUP_NAME Declaration public const string OMIYA_GAMES_GROUP_NAME = \"Omiya Games - Global Settings\" Field Value Type Description String"
  },
  "api/OmiyaGames.Global.Settings.html": {
    "href": "api/OmiyaGames.Global.Settings.html",
    "title": "Namespace OmiyaGames.Global.Settings | Global Settings documentation",
    "keywords": "Namespace OmiyaGames.Global.Settings Classes BaseSettingsData The data stored as addressables that the editor and runtime references BaseSettingsManager<TManager, TData> Abstract class that manages game interaction with TData . Data Helper set of info. Enums Data.Status Indicates the status of whether this manager grabbed an instance of TData ."
  },
  "index.html": {
    "href": "index.html",
    "title": "Omiya Games - Global Settings | Global Settings documentation",
    "keywords": "Omiya Games - Global Settings A template for creating and editing ScriptableObjects displayed in the Project Settings window. Also provides templates for Singleton instances to retrieve this ScriptableObject , editor for displaying the contents of the object in Project Settings window, pre- and post-build scripts to add the object into the build, etc. This project uses Addressables extensively. Install There are two common methods for installing this package. Through Unity Package Manager Unity's own Package Manager supports importing packages through a URL to a Git repo : First, on this repository page, click the \"Clone or download\" button, and copy over this repository's HTTPS URL. Then click on the + button on the upper-left-hand corner of the Package Manager, select \"Add package from git URL...\" on the context menu, then paste this repo's URL! While easy and straightforward, this method has a few major downside: it does not support dependency resolution and package upgrading when a new version is released. To add support for that, the following method is recommended: Through OpenUPM Installing via OpenUPM's command line tool is recommended because it supports dependency resolution, upgrading, and downgrading this package. If you haven't already installed OpenUPM , you can do so through Node.js's npm (obviously have Node.js installed in your system first): npm install -g openupm-cli Then, to install this package, just run the following command at the root of your Unity project: openupm add com.omiyagames.global.settings Resources Documentation Change Log LICENSE Overall package is licensed under MIT , unless otherwise noted in the 3rd party licenses file and/or source code. Copyright (c) 2022 Omiya Games"
  },
  "manual/changelog.html": {
    "href": "manual/changelog.html",
    "title": "Change Log: | Global Settings documentation",
    "keywords": "Change Log: 1.0.0-pre.1 Initial release: Added BaseSettingsData.cs : an abstract ScriptableObject and template for storing project-wide settings. Added BaseSettingsEditor.cs : an abstract SettingsProvider and template to draw the contents of a BaseSettingsData . Added BaseSettingsManager.cs : an abstract MonoBehaviour and template for a singleton script that loads a BaseSettingsData instance and performs any static functions. Added BaseSettingsBuilder.cs : an abstract IPreprocessBuildWithReport and IPostprocessBuildWithReport script that drops an instance of BaseSettingsData into preloaded assets list."
  },
  "manual/README.html": {
    "href": "manual/README.html",
    "title": "| Global Settings documentation",
    "keywords": "This folder contains markdown files listed under \"Manual\" section in the documentation. When adding or removing any files in this folder, don't forget to update toc.yml accordingly!"
  }
}